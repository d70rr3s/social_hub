<?php

/**
 * @file
 * Primary module hooks for Social Hub module.
 *
 * @DCG
 * This file is no longer required in Drupal 8.
 * @see https://www.drupal.org/node/2217931
 */

/**
 * Implements hook_library_info_build().
 */
function social_hub_library_info_build() {
  /** @var \Drupal\Core\Config\Entity\ConfigEntityStorageInterface $storage */
  $storage = \Drupal::service('entity_type.manager')->getStorage('platform');
  $results = $storage->getQuery()
    // @TODO Refactor to use an interface instead of fixed config value.
    ->condition('plugins.*', ['share'], 'IN')
    ->execute();
  $entities = [];
  $libraries = [];

  if (!empty($results)) {
    /** @var \Drupal\social_hub\PlatformInterface[] $entities */
    $entities = $storage->loadMultiple($results);
  }

  if (empty($entities)) {
    return [];
  }

  foreach ($entities as $entity) {
    /** @var \Drupal\social_hub\PlatformIntegrationPluginInterface $plugin */
    $plugin = $entity->getPluginCollection()->get('share');
    $configuration = $plugin->getConfiguration();
    if (empty($configuration['script_type']) || $configuration['script_type'] !== 'external') {
      continue;
    }

    $namespace = "{$entity->id()}_share";
    $libraries += [
      $namespace => [
        'js' => [],
      ],
    ];
    $libraries[$namespace]['js'][$configuration['external']['url']] = [
      'type' => 'external',
      'attributes' => $configuration['external']['attributes'],
      'preprocess' => $configuration['external']['preprocess'],
    ];

    $browsers = array_filter(_social_hub_process_browsers_rule($configuration['external']['browsers']));

    if (!empty($browsers)) {
      $libraries[$namespace]['js'][$configuration['external']['url']]['browsers'] = $browsers;
    }
  }

  return $libraries;
}

/**
 * Process supported browsers rule.
 *
 * Rules are stored using key/values text separated by colons and commas.
 * E.g.: 'IE:lte IE 9,!IE:false'.
 *
 * @param string $string
 *   The rule.
 *
 * @return array
 *   The supported browsers array.
 *
 * @internal
 */
function _social_hub_process_browsers_rule($string) {
  $tmp = explode(',', $string);

  if (empty($tmp)) {
    return [];
  }

  if (!is_array($tmp)) {
    return [];
  }

  $rules = [];

  foreach ($tmp as $item) {
    $rules += explode(':', $item);
  }

  return $rules;
}
