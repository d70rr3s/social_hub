/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, _ref, _ref2) {
  var behaviors = _ref.behaviors;
  var socialHub = _ref2.socialHub;

  behaviors.socialHubShareCopy = {
    attach: function attach() {
      var instances = socialHub.instances;

      for (var i = 0; i < instances.length; i++) {
        $(instances[i]).once('social_hub--share__copy').each(function (i, el) {
          var $el = $(el);
          $el.on('click', function (e) {
            e.preventDefault();
            var settings = $(this).data('social-hub');
            copyTextToClipboard(settings.url);
          });
        });
      }
    }
  };

  function fallbackCopyTextToClipboard(text, _callback) {
    var clipboard = document.createElement('textarea');
    clipboard.value = text;
    document.body.appendChild(clipboard);
    clipboard.focus();
    clipboard.select();

    try {
      document.execCommand('copy');
      _callback(Drupal.t('Copied!'));
    } catch (err) {
      _callback(Drupal.t('Error copying text to clipboard: ' + err), Drupal.t('Error'));
      console.error('Error copying text to clipboard', err);
    }

    document.body.removeChild(clipboard);
  }

  function closePopup(id) {
    var el = document.querySelector('#' + id);
    el.parentNode.removeChild(el);
  }

  function uniqueid() {
    var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 12;

    var id = '';

    do {
      id = Math.random().toString(36).substr(2, length);
    } while (id.length < length);

    return id;
  }

  function fallbackPopUp(content) {
    var title = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    var id = uniqueid();
    var alStart = Drupal.t('Begins %string.', {
      '%string': Drupal.t('popup')
    });
    var alEnd = Drupal.t('Ends %string.', {
      '%string': Drupal.t('popup')
    });
    var alClose = Drupal.t('Click to close popup.');
    title = title !== null ? title : '&nbsp;';
    var overlays = document.querySelectorAll('.overlay.copy-to-clipboard');
    var template = '\n<div class="popup">\n  <span class="element-invisible">' + alStart + '</span>\n  <h2>' + title + '</h2>\n  <a class="close_popup" href="#" data-reference="' + id + '" aria-label="' + alClose + '">&times;</a>\n  <div class="content">' + content + '</div>\n  <span class="element-invisible">' + alEnd + '</span>\n</div>\n';
    var overlay = null;

    if (overlays.length === 0) {
      overlay = document.createElement('div');
      overlay.id = id;
      overlay.classList.add('overlay');
      overlay.classList.add('copy-to-clipboard');
      overlay.innerHTML = template;
      document.body.appendChild(overlay);
    } else {
      overlay = overlays.item(0);
      id = overlay.id;
      overlay.innerHTML = template;
    }

    var close = document.querySelectorAll('[data-reference="' + id + '"]');
    close.forEach(function (el) {
      el.addEventListener('click', function () {
        document.getElementById(id).style.visibility = 'hidden';
      });
    });
    overlay.addEventListener('click', function () {
      document.getElementById(id).remove();
    });

    overlay.style.visibility = 'visible';
    overlay.style.opacity = '0.85';
  }

  function copyTextToClipboard(text) {
    var _callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    if (_callback === null || !(typeof _callback === 'function')) {
      _callback = fallbackPopUp;
    }

    if (!navigator.clipboard) {
      fallbackCopyTextToClipboard(text, _callback);
      return;
    }

    navigator.clipboard.writeText(text).then(function () {
      _callback(Drupal.t('Copied!'));
    }, function (err) {
      _callback(Drupal.t('Error copying text to clipboard: ' + err), Drupal.t('Error'));
      console.error('Error copying text to clipboard: ', err);
    });
  }

  $.fn.clickToCopy = function () {
    var $this = $(this);
    $this.on('click', function (e) {
      var $target = $(e.target);

      if ($target.is($this)) {
        var isInput = $target.is('input:text') || $target.is('textarea');
        var value = isInput ? $target.val() : $target.text();
        copyTextToClipboard(value);
      }
    });
  };
})(jQuery, Drupal, drupalSettings);